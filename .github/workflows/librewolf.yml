# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  workflow_dispatch:
    inputs:
        PKGVER:
          description: 'version'
          required: true
          default: '108.0.1'
        PKGREL:    
          description: 'release number'
          required: true
          default: '1'
        CARCH:
          description: 'x86_64 or aarch64'
          required: true
          default: 'x86_64'
        SETTINGS_TAG:
          description: 'the settings tag to be used'
          required: true
          default: '7.3'


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Prepair
        run: |
          sudo apt update
          sudo apt install wget git -y
          sudo apt upgrade -y
          git clone --depth=1 https://gitlab.com/librewolf-community/browser/linux.git
          cd linux
          ls # for debug
          chmod +x ./build_tarball.sh
          sudo apt install -y wget git xvfb xz-utils gettext-base curl python3 libjack-dev python3-dev python-dev gnupg autotools-dev autoconf2.13 zip libx11-dev libx11-xcb-dev libxt-dev libxext-dev libgtk-3-dev libglib2.0-dev libpango1.0-dev libfontconfig1-dev libfreetype6-dev libstartup-notification0-dev libasound2-dev libcurl4-openssl-dev libdbus-glib-1-dev lsb-release libiw-dev mesa-common-dev libnotify-dev libxrender-dev libpulse-dev libssl-dev yasm unzip dbus-x11 python libffi-dev nodejs-mozilla locales
          # sudo apt install -y nasm-mozilla
          sudo apt install python3-dev python3-pip python3-venv python3-virtualenv
          

      # Runs a set of commands using the runners shell
      - name: Building
        run: |
          export pkgver=${{ github.event.inputs.PKGVER }}
          export pkgrel=${{ github.event.inputs.PKGREL }}
          export CARCH=${{ github.event.inputs.CARCH }}
          # This variables will be used by build script
          export SETTINGS_TAG=${{ github.event.inputs.SETTINGS_TAG }}
          export GIT_SUBMODULE_STRATEGY="recursive"
          cd linux
          export CI_PROJECT_DIR=`pwd`
          ls # for debug
          pwd # for debug
          # sed 's/apt-get/sudo apt-get/' scripts/1_Install_Dependencies.sh > scripts/1_Install_Dependencies.sh
          sed -i 's/_PKGVER_TAG=\"v${pkgver}-${pkgrel}\"/_PKGVER_TAG=\"${pkgver}-${pkgrel}\"/' scripts/3_Configure_Source_Code.sh
          sed -i 's/source \/root\/.cargo\/env/source $HOME\/.cargo\/env/' scripts/4_Build_Binary_Tarball.sh
          sed -i 's/source \/root\/.cargo\/env/source $HOME\/.cargo\/env/' scripts/1_Install_Dependencies.sh
          
          sed -i 's/bionic/focal/' scripts/1_Install_Dependencies.sh
          sed -i 's/bionic/focal/' scripts/1_Install_Dependencies.sh
          sed -i 's/nasm-mozilla/nasm/' scripts/1_Install_Dependencies.sh
          # ./build_tarball.sh LibreWolf-${{ github.event.inputs.VERSION }}-amd64.tar.bz2
          sed -i '/export MACH_BUILD_PYTHON_NATIVE_PACKAGE_SOURCE=system/d' scripts/4_Build_Binary_Tarball.sh
          sed -i '/ac_add_options NASM=\/usr\/lib\/nasm-mozilla\/bin\/nasm/d' scripts/3_Configure_Source_Code.sh
          # ./build_tarball.sh LibreWolf-${pkgver}-${pkgrel}.${CARCH}.tar.bz2
          sudo -E ./build_tarball.sh "${CI_PROJECT_DIR}/LibreWolf-${pkgver}-${pkgrel}.${CARCH}.tar.bz2"
          


      - name: Upload to Release
        uses: softprops/action-gh-release@v1
        with:
          files: linux/LibreWolf-${{ github.event.inputs.PKGVER }}-${{ github.event.inputs.PKGREL }}.${{ github.event.inputs.CARCH }}.tar.bz2
          name: LibreWolf-${{ github.event.inputs.PKGVER }}-${{ github.event.inputs.PKGREL }}.${{ github.event.inputs.CARCH }}
          tag_name: ${{ github.run_id }}
          body: LibreWolf-${{ github.event.inputs.PKGVER }}-${{ github.event.inputs.PKGREL }}.${{ github.event.inputs.CARCH }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
